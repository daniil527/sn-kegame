import pygame
import random

CELL_SIZE = 20
SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480
GRID_WIDTH = SCREEN_WIDTH // CELL_SIZE
GRID_HEIGHT = SCREEN_HEIGHT // CELL_SIZE

class GameObject:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤."""
    
    def __init__(self, position=None, body_color=(255, 255, 255)):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤."""
        self.position = position if position else (SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2)
        self.body_color = body_color

    def draw(self, surface):
        """–ú–µ—Ç–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ–±—ä–µ–∫—Ç–∞. –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö."""
        pass
class Apple(GameObject):
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ —è–±–ª–æ–∫–∞."""
    
    def __init__(self):
        """–°–æ–∑–¥–∞—ë—Ç —è–±–ª–æ–∫–æ –≤ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏."""
        super().__init__(body_color=(255, 0, 0))
        self.randomize_position()

    def randomize_position(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —è–±–ª–æ–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è."""
        x = random.randint(0, GRID_WIDTH - 1) * CELL_SIZE
        y = random.randint(0, GRID_HEIGHT - 1) * CELL_SIZE
        self.position = (x, y)

    def draw(self, surface):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —è–±–ª–æ–∫–æ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ."""
        rect = pygame.Rect(self.position, (CELL_SIZE, CELL_SIZE))
        pygame.draw.rect(surface, self.body_color, rect)
class Snake(GameObject):
    """–ö–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∑–º–µ–π–∫—É."""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–º–µ–π–∫–∏."""
        super().__init__(body_color=(0, 255, 0))
        self.length = 1
        self.positions = [self.position]
        self.direction = (CELL_SIZE, 0)  # –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
        self.next_direction = None

    def update_direction(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ –Ω–æ–≤–æ–µ."""
        if self.next_direction:
            # –ó–∞–ø—Ä–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
            if (self.next_direction[0] * -1, self.next_direction[1] * -1) != self.direction:
                self.direction = self.next_direction
            self.next_direction = None

    def move(self):
        """–ü–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç –∑–º–µ–π–∫—É –≤ —Ç–µ–∫—É—â–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏."""
        head_x, head_y = self.positions[0]
        delta_x, delta_y = self.direction
        new_head = ((head_x + delta_x) % SCREEN_WIDTH, (head_y + delta_y) % SCREEN_HEIGHT)
        if new_head in self.positions:
            self.reset()
        else:
            self.positions.insert(0, new_head)
            if len(self.positions) > self.length:
                tail = self.positions.pop()
                pygame.draw.rect(pygame.display.get_surface(), (0, 0, 0), pygame.Rect(tail, (CELL_SIZE, CELL_SIZE)))

    def draw(self, surface):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∑–º–µ–π–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ."""
        for segment in self.positions:
            rect = pygame.Rect(segment, (CELL_SIZE, CELL_SIZE))
            pygame.draw.rect(surface, self.body_color, rect)

    def get_head_position(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏."""
        return self.positions[0]

    def reset(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∑–º–µ–π–∫—É –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ."""
        self.length = 1
        self.position = (SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2)
        self.positions = [self.position]
        self.direction = (CELL_SIZE, 0)
        self.next_direction = None
def handle_keys(snake):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º."""
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            return False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                snake.next_direction = (0, -CELL_SIZE)
            elif event.key == pygame.K_DOWN:
                snake.next_direction = (0, CELL_SIZE)
            elif event.key == pygame.K_LEFT:
                snake.next_direction = (-CELL_SIZE, 0)
            elif event.key == pygame.K_RIGHT:
                snake.next_direction = (CELL_SIZE, 0)
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª."""
    pygame.init()
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    pygame.display.set_caption("–ò–∑–≥–∏–± –ü–∏—Ç–æ–Ω–∞ üêç")
    clock = pygame.time.Clock()

    snake = Snake()
    apple = Apple()

    running = True
    while running:
        clock.tick(20)
        running = handle_keys(snake)
        snake.update_direction()
        snake.move()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å —è–±–ª–æ–∫–æ–º
        if snake.get_head_position() == apple.position:
            snake.length += 1
            apple.randomize_position()

        screen.fill((0, 0, 0))
        snake.draw(screen)
        apple.draw(screen)
        pygame.display.update()

    pygame.quit()
